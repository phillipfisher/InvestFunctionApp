pool:
  vmImage: 'Ubuntu 16.04'
  
steps:

- script: 'dotnet build src/InvestFunctionApp/InvestFunctionApp.sln --configuration $(buildConfiguration)'
  displayName: 'Build solution'
    
- script: 'dotnet test src/InvestFunctionApp/InvestFunctionApp.Tests --configuration $(buildConfiguration) --logger trx'
  displayName: 'Run unit tests'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- script: dotnet publish 'src/InvestFunctionApp/InvestFunctionApp/InvestFunctionApp.csproj' --configuration $(buildConfiguration) --output '$(Build.ArtifactStagingDirectory)/app'
  displayName: 'Package function app'

- task: PublishBuildArtifacts@1
  displayName: 'Publishing app artifact'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
    artifactName: app

- task: CopyFiles@2
  displayName: 'Copy ARM Templates'
  inputs:
    sourceFolder: 'src/InvestFunctionApp/AzureTemplates'
    targetFolder: '$(Build.ArtifactStagingDirectory)/ARM'

- task: PublishBuildArtifacts@1
  displayName: 'Publish ARM artifact'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/ARM'
    artifactName: ARM

- task: CopyFiles@2
  displayName: 'Copy end to end tests'
  inputs:
    sourceFolder: 'src/InvestFunctionApp'
    targetFolder: '$(Build.ArtifactStagingDirectory)/e2etests'

- task: PublishBuildArtifacts@1
  displayName: 'Publish end to end test artifact'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/e2etests'
    artifactName: e2etests
